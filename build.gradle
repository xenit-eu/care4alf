buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath(group: 'eu.xenit.de', name: 'gradle-plugin', version: '3.0.0')
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'de.richsource.gradle.plugins:typescript-gradle-plugin:1.8.0'
        classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3'
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
    }
}

plugins {
    id 'eu.xenit.docker-alfresco' version '5.0.7' apply false
    id 'eu.xenit.docker-compose' version '5.0.7' apply false
    id 'eu.xenit.alfresco' version '1.1.0'
    id 'eu.xenit.amp' version '1.1.0'
}

allprojects {
    version = '4.0.0' + getVersionQualifier(System.env.BRANCH_NAME ?: 'local')
    group = 'eu.xenit.care4alf'
    repositories {
        maven {
            name 'Maven Central Snapshots'
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
}


def includeUnrolledResource(configuration) {
    def list = []
    configuration.each {
        //We have to replace the backslashes with forward slashes because on windows the path will just be unseparated.
        //For example when you have path "C\:Users\Someone\.gradle\caches" it will become "C\:UsersSomeone.gradlecaches"
        def normalizedPath = it.path.replace("\\", "/")
        list += '@' + normalizedPath
    }
    return list.join(',')
}

ext.deVersion = '3.1.0'
ext.buildNumber = project.hasProperty('buildNumber') ? project.getProperty('buildNumber') : "SNAPSHOT"

subprojects {
    apply plugin: 'java'
}

def String getVersionQualifier(String branch_name) {
    if (project.hasProperty('qualifier')) {
        return '-' + project.getProperty('qualifier')
    } else if (branch_name == 'release') {
        return ''
    } else {
        return '-SNAPSHOT'
    }
}
