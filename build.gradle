allprojects {
    version = '1.8.0' + getVersionQualifier(System.env.BRANCH_NAME ?: 'local')
    group = 'eu.xenit'
}
buildscript {
    ext.kotlin_version = '1.0.3'
    repositories {
        jcenter()
        mavenCentral()
        maven {
            //url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/'
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://artifactory.xenit.eu/artifactory/plugins-release'
            credentials {
                username property("eu.xenit.artifactory.username")
                password property("eu.xenit.artifactory.password")
            }
        }

        maven {
            url 'https://artifactory.xenit.eu/artifactory/libs-snapshot'
            credentials {
                username property("eu.xenit.artifactory.username")
                password property("eu.xenit.artifactory.password")
            }
        }
    }
    dependencies {
        classpath(group: 'eu.xenit.de', name: 'gradle-plugin', version: '1.7.5')
        classpath 'eu.xenit.gradle:xenit-gradle-plugins:3.3.0+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'de.richsource.gradle.plugins:typescript-gradle-plugin:1.8.0'
        classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3'
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
        classpath 'eu.xenit.gradle:ampde-plugin:2.0.0-SNAPSHOT'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.8.0"
        classpath "org.dm.gradle:gradle-bundle-plugin:0.10.0"
    }
}

def bundleClassPath(configuration) {
    def list = ['.']
    configuration.each {
        list += 'lib/' + it.name
    }
    return list.join(',')
}
def includeResource(configuration) {
    def list = []
    configuration.each {
        list += 'lib/' + it.name + "=" + it.path
    }
    return list.join(',')
}

ext.alfresco_version = '4.2.8'
ext.deVersion = '1.7.5'
ext.springVersion = '3.0.5.RELEASE'
ext.junitVersion = '4.12'
ext.buildNumber = project.hasProperty('buildNumber')?project.getProperty('buildNumber'):"SNAPSHOT";

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.dm.bundle'
}

apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    username = project.hasProperty('publish_username') ? project.publish_username : ''
    password = project.hasProperty('publish_password') ? project.publish_password : ''
    packageGroup = "eu.xenit"
}

def String getVersionQualifier(String branch_name) {
    if (project.hasProperty('qualifier')) {
        return '-' + project.getProperty('qualifier')
    } else if (branch_name == 'release') {
        return ''
    } else {
        return '-SNAPSHOT'
    }
}
